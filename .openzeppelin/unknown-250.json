{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xA8187f8F9F54FdB03Bc212caF3FA66b63D2938Ff",
    "txHash": "0xb53c0756e5691bf2de8bbf74a2b0f989779c33c01d22624527b2d39270653941",
    "deployTransaction": {
      "hash": "0xb53c0756e5691bf2de8bbf74a2b0f989779c33c01d22624527b2d39270653941",
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x383Ea12347E56932E08638767B8A2B3c18700493",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x4bab827200"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 170,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x505a714a9280f92ee9cdcd3e9547e612c10fb0a0a2f3a2cee906fe4a3b496744",
      "s": "0x5382d733f5811cba68ed5e29037dd27c7fc8c1c32d4f6057253871c5b0201101",
      "v": 536,
      "creates": "0xA8187f8F9F54FdB03Bc212caF3FA66b63D2938Ff",
      "chainId": 250
    }
  },
  "proxies": [
    {
      "address": "0xe9a5738f76D0cc14CB826B6F784983D77334C9Db",
      "txHash": "0x4101ab600e3bfc19cd28502e1b37ef6a4075116e760c8a438f72926998fe10b6",
      "kind": "transparent"
    }
  ],
  "impls": {
    "64fac76bc094bbbba912f91247c71ae21388d4d1e8c8e173b07f37be1b284704": {
      "address": "0x063FFdCD797Bd43E5a25A47894fD3fB162B7A28F",
      "txHash": "0xf32fb89f6434c1f9fde28dd1a7b8d53e40da7897ff4abe64955f916c747a22f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "MasterChefV2",
            "label": "MASTER_CHEF",
            "type": "t_contract(IMasterChef)8523",
            "src": "contracts/MasterChefV2.sol:48"
          },
          {
            "contract": "MasterChefV2",
            "label": "LQDR",
            "type": "t_contract(IERC20)337",
            "src": "contracts/MasterChefV2.sol:50"
          },
          {
            "contract": "MasterChefV2",
            "label": "MASTER_PID",
            "type": "t_uint256",
            "src": "contracts/MasterChefV2.sol:52"
          },
          {
            "contract": "MasterChefV2",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)5365_storage)dyn_storage",
            "src": "contracts/MasterChefV2.sol:55"
          },
          {
            "contract": "MasterChefV2",
            "label": "lpToken",
            "type": "t_array(t_contract(IERC20)337)dyn_storage",
            "src": "contracts/MasterChefV2.sol:57"
          },
          {
            "contract": "MasterChefV2",
            "label": "rewarder",
            "type": "t_array(t_contract(IRewarder)8604)dyn_storage",
            "src": "contracts/MasterChefV2.sol:59"
          },
          {
            "contract": "MasterChefV2",
            "label": "strategies",
            "type": "t_array(t_contract(IStrategy)8703)dyn_storage",
            "src": "contracts/MasterChefV2.sol:61"
          },
          {
            "contract": "MasterChefV2",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)5356_storage))",
            "src": "contracts/MasterChefV2.sol:64"
          },
          {
            "contract": "MasterChefV2",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/MasterChefV2.sol:66"
          },
          {
            "contract": "MasterChefV2",
            "label": "MASTERCHEF_LQDR_PER_BLOCK",
            "type": "t_uint256",
            "src": "contracts/MasterChefV2.sol:68"
          },
          {
            "contract": "MasterChefV2",
            "label": "ACC_LQDR_PRECISION",
            "type": "t_uint256",
            "src": "contracts/MasterChefV2.sol:69"
          },
          {
            "contract": "MasterChefV2",
            "label": "feeAddress",
            "type": "t_address",
            "src": "contracts/MasterChefV2.sol:72"
          },
          {
            "contract": "MasterChefV2",
            "label": "feeAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/MasterChefV2.sol:74"
          },
          {
            "contract": "MasterChefV2",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/MasterChefV2.sol:76"
          },
          {
            "contract": "MasterChefV2",
            "label": "liquidDepositor",
            "type": "t_address",
            "src": "contracts/MasterChefV2.sol:79"
          }
        ],
        "types": {
          "t_contract(IMasterChef)8523": {
            "label": "contract IMasterChef"
          },
          "t_contract(IERC20)337": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PoolInfo)5365_storage)dyn_storage": {
            "label": "struct MasterChefV2.PoolInfo[]"
          },
          "t_struct(PoolInfo)5365_storage": {
            "label": "struct MasterChefV2.PoolInfo",
            "members": [
              {
                "label": "accLqdrPerShare",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "depositFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_contract(IERC20)337)dyn_storage": {
            "label": "contract IERC20[]"
          },
          "t_array(t_contract(IRewarder)8604)dyn_storage": {
            "label": "contract IRewarder[]"
          },
          "t_contract(IRewarder)8604": {
            "label": "contract IRewarder"
          },
          "t_array(t_contract(IStrategy)8703)dyn_storage": {
            "label": "contract IStrategy[]"
          },
          "t_contract(IStrategy)8703": {
            "label": "contract IStrategy"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)5356_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)5356_storage)": {
            "label": "mapping(address => struct MasterChefV2.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)5356_storage": {
            "label": "struct MasterChefV2.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "398a0eb4af53ce35db2fa3eec1cbedcd19e2bdba48e59c4b67b175a15955706e": {
      "address": "0x5B25027b7D9B081F1D4E83b6b410e4fadF3DC59E",
      "txHash": "0x51a3465648713e2442259930c62d56774a5d3ef68108ed8a91b0300e7a607bf0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "MasterChefV2",
            "label": "MASTER_CHEF",
            "type": "t_contract(IMasterChef)8523",
            "src": "contracts/MasterChefV2.sol:48"
          },
          {
            "contract": "MasterChefV2",
            "label": "LQDR",
            "type": "t_contract(IERC20)337",
            "src": "contracts/MasterChefV2.sol:50"
          },
          {
            "contract": "MasterChefV2",
            "label": "MASTER_PID",
            "type": "t_uint256",
            "src": "contracts/MasterChefV2.sol:52"
          },
          {
            "contract": "MasterChefV2",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)5365_storage)dyn_storage",
            "src": "contracts/MasterChefV2.sol:55"
          },
          {
            "contract": "MasterChefV2",
            "label": "lpToken",
            "type": "t_array(t_contract(IERC20)337)dyn_storage",
            "src": "contracts/MasterChefV2.sol:57"
          },
          {
            "contract": "MasterChefV2",
            "label": "rewarder",
            "type": "t_array(t_contract(IRewarder)8604)dyn_storage",
            "src": "contracts/MasterChefV2.sol:59"
          },
          {
            "contract": "MasterChefV2",
            "label": "strategies",
            "type": "t_array(t_contract(IStrategy)8703)dyn_storage",
            "src": "contracts/MasterChefV2.sol:61"
          },
          {
            "contract": "MasterChefV2",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)5356_storage))",
            "src": "contracts/MasterChefV2.sol:64"
          },
          {
            "contract": "MasterChefV2",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/MasterChefV2.sol:66"
          },
          {
            "contract": "MasterChefV2",
            "label": "MASTERCHEF_LQDR_PER_BLOCK",
            "type": "t_uint256",
            "src": "contracts/MasterChefV2.sol:68"
          },
          {
            "contract": "MasterChefV2",
            "label": "ACC_LQDR_PRECISION",
            "type": "t_uint256",
            "src": "contracts/MasterChefV2.sol:69"
          },
          {
            "contract": "MasterChefV2",
            "label": "feeAddress",
            "type": "t_address",
            "src": "contracts/MasterChefV2.sol:72"
          },
          {
            "contract": "MasterChefV2",
            "label": "feeAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/MasterChefV2.sol:74"
          },
          {
            "contract": "MasterChefV2",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/MasterChefV2.sol:76"
          },
          {
            "contract": "MasterChefV2",
            "label": "liquidDepositor",
            "type": "t_address",
            "src": "contracts/MasterChefV2.sol:79"
          }
        ],
        "types": {
          "t_contract(IMasterChef)8523": {
            "label": "contract IMasterChef"
          },
          "t_contract(IERC20)337": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PoolInfo)5365_storage)dyn_storage": {
            "label": "struct MasterChefV2.PoolInfo[]"
          },
          "t_struct(PoolInfo)5365_storage": {
            "label": "struct MasterChefV2.PoolInfo",
            "members": [
              {
                "label": "accLqdrPerShare",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "depositFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_contract(IERC20)337)dyn_storage": {
            "label": "contract IERC20[]"
          },
          "t_array(t_contract(IRewarder)8604)dyn_storage": {
            "label": "contract IRewarder[]"
          },
          "t_contract(IRewarder)8604": {
            "label": "contract IRewarder"
          },
          "t_array(t_contract(IStrategy)8703)dyn_storage": {
            "label": "contract IStrategy[]"
          },
          "t_contract(IStrategy)8703": {
            "label": "contract IStrategy"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)5356_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)5356_storage)": {
            "label": "mapping(address => struct MasterChefV2.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)5356_storage": {
            "label": "struct MasterChefV2.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
